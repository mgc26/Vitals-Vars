name: Newsletter Issue Publishing

on:
  push:
    paths:
      - 'issues/**/README.md'
    branches:
      - main
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to publish (e.g., 01)'
        required: true
        type: string

jobs:
  validate-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Validate Issue Structure
        run: |
          ISSUE_NUM="${{ github.event.inputs.issue_number || '01' }}"
          ISSUE_DIR="issues/${ISSUE_NUM}_*"
          
          # Skip directory validation for launch issue (00)
          if [ "$ISSUE_NUM" != "00" ]; then
            # Check required directories exist
            for dir in 01_frame_the_pain 02_surface_the_signals 03_test_the_levers 04_size_the_prize 05_monday_playbook 06_grab_and_go_asset; do
              if [ ! -d "$ISSUE_DIR/$dir" ]; then
                echo "Error: Missing required directory $dir"
                exit 1
              fi
            done
          else
            echo "Launch issue (00) - skipping 6-stage structure validation"
          fi
          
          # Check README exists and meets word count
          if [ ! -f "$ISSUE_DIR/README.md" ]; then
            echo "Error: README.md not found"
            exit 1
          fi
          
          WORD_COUNT=$(wc -w < "$ISSUE_DIR/README.md")
          if [ $WORD_COUNT -lt 600 ] || [ $WORD_COUNT -gt 800 ]; then
            echo "Warning: Word count is $WORD_COUNT (target: 600-800)"
          fi

  check-assets:
    runs-on: ubuntu-latest
    needs: validate-issue
    steps:
      - uses: actions/checkout@v3
      
      - name: Verify Grab-and-Go Assets
        run: |
          ISSUE_NUM="${{ github.event.inputs.issue_number || '01' }}"
          ISSUE_DIR="issues/${ISSUE_NUM}_*"
          
          # Skip asset validation for launch issue (00)
          if [ "$ISSUE_NUM" != "00" ]; then
            ASSET_DIR="$ISSUE_DIR/06_grab_and_go_asset"
            
            # Check for at least one asset
            if [ -z "$(ls -A $ASSET_DIR)" ]; then
              echo "Error: No assets found in grab-and-go directory"
              exit 1
            fi
            
            # Check for README in assets
            if [ ! -f "$ASSET_DIR/README.md" ]; then
              echo "Error: Asset README.md not found"
              exit 1
            fi
          else
            echo "Launch issue (00) - skipping asset validation"
          fi

  quality-checks:
    runs-on: ubuntu-latest
    needs: validate-issue
    steps:
      - uses: actions/checkout@v3
      
      - name: Check Links
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress './issues/**/*.md'
          fail: false
          
      - name: Spell Check
        uses: streetsidesoftware/cspell-action@v2
        with:
          files: './issues/**/*.md'
          config: '.cspell.json'
          strict: false

  format-check:
    runs-on: ubuntu-latest
    needs: validate-issue
    steps:
      - uses: actions/checkout@v3
      
      - name: Markdown Formatting
        uses: DavidAnson/markdownlint-cli2-action@v11
        with:
          globs: './issues/**/*.md'
          config: '.markdownlint.json'
          fix: false

  generate-summary:
    runs-on: ubuntu-latest
    needs: [check-assets, quality-checks, format-check]
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate Issue Summary
        run: |
          ISSUE_DIR="issues/${{ github.event.inputs.issue_number || '01' }}_*"
          
          echo "# Issue Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Issue Details" >> $GITHUB_STEP_SUMMARY
          echo "- Path: $ISSUE_DIR" >> $GITHUB_STEP_SUMMARY
          echo "- Word Count: $(wc -w < $ISSUE_DIR/README.md)" >> $GITHUB_STEP_SUMMARY
          echo "- Assets: $(ls -1 $ISSUE_DIR/06_grab_and_go_asset | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Validation Status" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All checks passed" >> $GITHUB_STEP_SUMMARY

  publish-notification:
    runs-on: ubuntu-latest
    needs: generate-summary
    if: success()
    steps:
      - name: Create Issue Published Notification
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.payload.inputs?.issue_number || '01';
            const issueBody = `
            # ðŸŽ‰ Newsletter Issue Published!
            
            Issue #${issueNumber} has been successfully validated and is ready for distribution.
            
            ## Next Steps:
            - [ ] Copy content to LinkedIn newsletter
            - [ ] Send announcement to mailing list
            - [ ] Share in relevant Slack/Teams channels
            - [ ] Track engagement metrics
            
            ## Quick Links:
            - [View Issue](../issues/${issueNumber}_*)
            - [Download Assets](../issues/${issueNumber}_*/06_grab_and_go_asset)
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Newsletter Issue #${issueNumber} Published`,
              body: issueBody,
              labels: ['newsletter', 'published']
            });